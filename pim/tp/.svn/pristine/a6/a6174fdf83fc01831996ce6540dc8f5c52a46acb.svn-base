with Ada.Text_IO;           use Ada.Text_IO;
with Ada.Integer_Text_IO;   use Ada.Integer_Text_IO;
with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;
	--! Les Unbounded_String ont une capacité variable, contrairement au String
	--! pour lesquelles une capacité doit être fixée.
with TH;

procedure TH_Sujet is
	Capacite: constant Integer := 100;

	function MonHashage(Cle: Unbounded_String) return Integer is
	begin
		return (Length(Cle) MOD Capacite);
	end MonHashage;

	package TH_String_Integer is
		new TH (T_Cle => Unbounded_String,
			T_Donnee => Integer,
			Capacite => Capacite,
			Hashage => MonHashage);
	use TH_String_Integer;


	Mon_TH : TH_String_Integer.T_TH;


	-- Afficher une Unbounded_String et un entier.
	procedure Afficher (S : in Unbounded_String; N: in Integer) is
	begin
		Put (To_String(S));
		Put (" : ");
		Put (N, 1);
		New_Line;
	end Afficher;

	-- Afficher la Sda.
	procedure Afficher_Pour_Chaque is
		new Pour_Chaque (Afficher);

begin
	Initialiser (Mon_TH);
	Enregistrer (Mon_TH, To_Unbounded_String("un"), 10);
	Enregistrer (Mon_TH, To_Unbounded_String("deux"), 20);
	Afficher_Pour_Chaque (Mon_TH);
end TH_Sujet;
